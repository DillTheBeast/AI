So far I have gotten a dataset
It has 3 sets of the same picture
    Defocused Blur
    Motion Blur
    Sharp
    There are 350 pictures in each folder

I also have a python program that uses matplotlib to blur photos in case I need to add more photos to my dataset
I will be using tensorflow as my frame
If I have time I will make an app using tkinter library in python

Currently I am going to use a convolutional neural network
This will recognize pieces of the photo to hopefully put a sharper image together

It will be a U-Net network
     U-Net is a popular neural network architecture for image-to-image tasks. 
     Two main parts: encoder and decoder
     Encoder: The encoder progressively reduces the spatial dimensions of the image, capturing more complex features at each layer.
     Decoder: The decoder gradually upsamples the feature maps back to the original resolution, while combining features learned during the encoding process. This allows the network to learn fine details.

Training Data: The input to the model will be the blurred images (both defocused and motion-blurred), and the target output will be the sharp images.
Training Process: The model will be trained over multiple epochs using batches of images, adjusting its weights to minimize the error between the predicted and target sharp images. A validation split will be used to monitor performance on a portion of the data that the model doesn’t train on.
Model Optimization: The Adam optimizer will be used to adjust the model’s weights during training.
    Adam optimizer: optimization technique for gradient descent

Model Testing and Evaluation
After training, the model will be tested by passing in new blurred images to see how well it can enhance them.
The output will be compared visually with the original sharp images to evaluate the effectiveness of the enhancement.

Once the model is trained, it will be saved so it can be reused for enhancing other images without needing to retrain the network.

Functionality: A function will be written to load any new blurred image, resize and preprocess it, and then use the trained model to enhance it.
Output: The enhanced image will be saved as a new file. The resulting image will have improved sharpness and clarity compared to the original blurred version.